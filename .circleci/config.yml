defaults: &defaults
    machine: true
    steps:
      - attach_workspace:
          at: RPMS
      - run: |
          sudo chgrp -R 0 RPMS
          sudo chmod -R g=u RPMS
          ls -lR
      - run: docker run -u rpmbuild:0 -h rpmbuild-el7.fmi.fi -v $PWD/RPMS:/home/rpmbuild/rpmbuild/RPMS fmidev/rpmbuild:el7 https://github.com/fmidev/$CIRCLE_JOB.git
      - run: ls -lR RPMS

aliases:
  - &attach_workspace
      at: RPMS

  - &run
    |
      sudo chgrp -R 0 RPMS
      sudo chmod -R g=u RPMS
      ls -lR
      docker run -u rpmbuild:0 -e "RPM_BUILD_NCPUS=4" -h rpmbuild-el7.fmi.fi -v $PWD/RPMS:/home/rpmbuild/rpmbuild/RPMS fmidev/rpmbuild:el7 https://github.com/fmidev/$CIRCLE_JOB.git
      ls -lR RPMS

version: 2
jobs:
  deploytest:
    docker:
      - image: fmidev/rpmbuild:el7
        entrypoint: bash
    steps:
      - run:
          name: Firebase Deploy
          command: |
            mkdir -p RPMS
            cd RPMS
            echo OK > index.html
            echo '{"hosting":{"public":"."}}' > firebase.json
            firebase deploy --project download-smartmet --token "$FIREBASE_TOKEN"
  prepare:
    machine: true
    steps:
      - run: sudo npm install firebase-tools
      - run: firebase deploy
      - run: mkdir -p RPMS
      - run: sudo chgrp -R 0 RPMS
      - run: sudo chmod -R g=u RPMS
      - run: ls -la
      - persist_to_workspace:
          root: RPMS
          paths: .

  smartmet-library-newbase:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-newbase*
  smartmet-library-imagine:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-imagine*
  smartmet-library-macgyver:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-macgyver*
  smartmet-library-smarttools:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-smarttools*
  smartmet-library-calculator:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-calculator*
  smartmet-library-gis:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-gis*
  smartmet-library-spine:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-library-spine*
  smartmet-qdtools:
    machine: true
    steps:
      - attach_workspace: *attach_workspace
      - run: *run
      - persist_to_workspace:
          root: RPMS
          paths: x86_64/smartmet-qdtools*
  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: RPMS
      - run:
          name: Install Firebase
          command: sudo npm install firebase-tools
      - run:
          name: Copy files
          command: scp -r RPMS/ fmi@cumulus.meteo.fi:RPMS/
      - run:
          name: Firebase Deploy
          command: |
            cd RPMS
            echo '{"hosting":{"public":"."}}' > firebase.json
            firebase deploy --project download-smartmet --token "$FIREBASE_TOKEN"


workflows:
  version: 2
  build-smartmet-qdtools:
    jobs:
      - deploytest
      - prepare:
          requires:
            - deploytest
      - smartmet-library-newbase:
          requires:
            - prepare
      - smartmet-library-imagine:
          requires:
            - smartmet-library-newbase
      - smartmet-library-macgyver:
          requires:
            - smartmet-library-newbase
      - smartmet-library-smarttools:
          requires:
            - smartmet-library-newbase
      - smartmet-library-calculator:
          requires:
            - smartmet-library-macgyver
      - smartmet-library-gis:
          requires:
            - smartmet-library-macgyver
      - smartmet-library-spine:
          requires:
            - smartmet-library-gis
      - smartmet-qdtools:
          requires:
            - smartmet-library-newbase
            - smartmet-library-imagine
            - smartmet-library-macgyver
            - smartmet-library-smarttools
            - smartmet-library-calculator
            - smartmet-library-gis
            - smartmet-library-spine
      - deploy:
          requires:
            - smartmet-qdtools

